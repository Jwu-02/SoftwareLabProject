{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhhuy\\\\Documents\\\\ECE 461L\\\\CheckPt2Submission\\\\src\\\\pages\\\\NewUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewUser = props => {\n  _s();\n  const [userID, setUserID] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleExistingUserClick = () => {\n    navigate('/');\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // Check if userID or password is null, empty or just spaces\n    if (!userID || !userID.trim() || !password || !password.trim()) {\n      setMessage(\"User ID or password cannot be empty\");\n      return;\n    }\n\n    // Prepare data to send to the backend\n    const data = {\n      userID: userID,\n      password: password\n    };\n    try {\n      // Make a POST request to your backend\n      const response = await fetch('/save_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      // Handle the response from the backend\n      const responseData = await response.json();\n      console.log(responseData); // Log the response for debugging purposes\n\n      // Optionally, you can handle the response here and update your UI accordingly\n      if (response.status === 201) {\n        // User registered successfully\n        // Navigate to the project page\n        setMessage(\"User registered successfully\");\n      } else {\n        // Registration failed\n        // Update your UI accordingly\n        setMessage(responseData.message);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ECE 461L: User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register for New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newuser-form\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userID\",\n        children: \"userID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userID,\n        onChange: e => setUserID(e.target.value),\n        type: \"text\",\n        id: \"userID\",\n        name: \"userID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"text\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-button\",\n      onClick: handleExistingUserClick,\n      children: \"Already have an account? Login here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(NewUser, \"RPkI1XvgvfJGgGR7hAZUx5QnrtA=\", false, function () {\n  return [useNavigate];\n});\n_c = NewUser;\nexport default NewUser;\nvar _c;\n$RefreshReg$(_c, \"NewUser\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","NewUser","props","_s","userID","setUserID","password","setPassword","message","setMessage","navigate","handleExistingUserClick","handleRegister","e","preventDefault","trim","data","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","status","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jhhuy/Documents/ECE 461L/CheckPt2Submission/src/pages/NewUser.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst NewUser = (props) => {\r\n\r\n    const [userID, setUserID] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const handleExistingUserClick = () => {\r\n        navigate('/')\r\n    }\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n\r\n         // Check if userID or password is null, empty or just spaces\r\n         if (!userID || !userID.trim() || !password || !password.trim()) {\r\n            setMessage(\"User ID or password cannot be empty\");\r\n            return;\r\n        }\r\n\r\n        // Prepare data to send to the backend\r\n        const data = {\r\n            userID: userID,\r\n            password: password\r\n        };\r\n\r\n        try {\r\n            // Make a POST request to your backend\r\n            const response = await fetch('/save_user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            // Handle the response from the backend\r\n            const responseData = await response.json();\r\n            console.log(responseData); // Log the response for debugging purposes\r\n\r\n            // Optionally, you can handle the response here and update your UI accordingly\r\n            if (response.status === 201) {\r\n                // User registered successfully\r\n                // Navigate to the project page\r\n                setMessage(\"User registered successfully\");\r\n            } else{\r\n                // Registration failed\r\n                // Update your UI accordingly\r\n                setMessage(responseData.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h1>ECE 461L: User Management</h1>\r\n            <h2>Register for New User</h2>\r\n            <form className=\"newuser-form\" onSubmit={handleRegister}>\r\n                <label htmlFor=\"userID\">userID</label>\r\n                <input value={userID} onChange={(e) => setUserID(e.target.value)} type=\"text\" id=\"userID\" name=\"userID\"/>\r\n\r\n                <label htmlFor=\"password\">password</label>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"text\" id=\"password\" name=\"password\"/>\r\n\r\n                <button type=\"submit\">Register</button>\r\n            </form>\r\n            <div>{message}</div>\r\n            <button className=\"link-button\" onClick={handleExistingUserClick}>Already have an account? Login here</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}