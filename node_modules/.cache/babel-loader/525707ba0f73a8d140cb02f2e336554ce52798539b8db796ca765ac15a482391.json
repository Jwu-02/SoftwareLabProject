{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhhuy\\\\Documents\\\\ECE 461L\\\\final_project\\\\src\\\\pages\\\\ResourceManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ResourceManagement\nimport React, { cloneElement, useState, useEffect, useRef } from 'react';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HW(props) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"HWSet\", props.hwset_num, \":\", props.availabiliy, \"/\", props.cap, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = HW;\nfunction HW_set({\n  HW_set,\n  project_id,\n  hwset_num,\n  cap,\n  HW_req,\n  setHW_req,\n  setCheckIn_\n}) {\n  _s();\n  const [availability, setavailability] = useState();\n  const handleCheckInOut = async checkIn => {\n    try {\n      const response = await fetch(checkIn ? '/check_in_hardware' : '/check_out_hardware', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          projectId: project_id,\n          // Assuming projectId corresponds to hardware set number\n          qty: HW_req,\n          hwID: hwset_num\n        })\n      });\n      const responseData = await response.json();\n      alert(JSON.stringify(responseData));\n      setavailability(responseData.new_avail);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resource-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"resource-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"HWSet\", hwset_num, \":\", availability, \"/\", cap, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"from\", {\n      className: \"resource-section\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: HW_req,\n        onChange: e => setHW_req(e.target.value),\n        type: \"text\",\n        id: HW_req,\n        name: HW_req,\n        placeholder: \"Enter Qty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"from\", {\n      className: \"resource-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCheckInOut(true),\n          children: \"Check In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"from\", {\n      className: \"resource-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCheckInOut(false),\n          children: \"Check Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(HW_set, \"Y+ADjJUa+b8z7Akk4xeKMNYecZI=\");\n_c2 = HW_set;\nfunction ButtonCheckIn_Out({\n  setCheckIn\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCheckIn(true),\n      children: \"Check In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCheckIn(false),\n      children: \"Check Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_c3 = ButtonCheckIn_Out;\nconst Projects = project_id => {\n  _s2();\n  const [HW1cap, setHW1cap] = useState(\"\");\n  const [HW2cap, setHW2cap] = useState(\"\");\n  const [HW1Availability, setHW1Availability] = useState(\"0\");\n  const [HW1av, setHW1av] = useState(\"\");\n  const [HW2av, setHW2av] = useState(\"\");\n  const [HW1req, setHW1req] = useState(\"\");\n  const [HW2req, setHW2req] = useState(\"\");\n  const [HW3req, setHW3req] = useState(\"\");\n  const [checkIn1, setCheckIn1] = useState(true);\n  const [checkIn2, setCheckIn2] = useState(true);\n  const [checkIn3, setCheckIn3] = useState(true);\n  const [isPlaceholderVisible, setIsPlaceholderVisible] = useState(true);\n  const [button1Text, setButton1Text] = useState(\"Join\");\n  const [button2Text, setButton2Text] = useState(\"Leave\");\n  const [button3Text, setButton3Text] = useState(\"Join\");\n  const navigate = useNavigate();\n  const [isCapacityRevealed, setIsCapacityRevealed] = useState(false); // Track whether capacity is revealed\n\n  const revealCapacity = async () => {\n    try {\n      const response = await fetch('/resource_management');\n      const data = await response.json();\n      setHW1cap(data.HW1availability);\n      setHW2cap(data.HW2availability);\n      setIsCapacityRevealed(true);\n    } catch (error) {\n      console.error('Error fetching capacity:', error);\n    }\n  };\n  const handleClick1 = () => {\n    if (button1Text === \"Join\") {\n      setButton1Text(\"Leave\");\n    } else {\n      setButton1Text(\"Join\");\n    }\n  };\n  const handleLogout = () => {\n    // Add any logout logic here if needed\n    navigate('/');\n  };\n  const handleClick2 = () => {\n    setButton2Text(button2Text === \"Join\" ? \"Leave\" : \"Join\");\n  };\n  const handleClick3 = () => {\n    setButton3Text(button3Text === \"Join\" ? \"Leave\" : \"Join\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ECE461L: Resource Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        width: '100px'\n      },\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: revealCapacity,\n      children: \"Please Press Here to Reveal Initial Capacity, this is a known issue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resource-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"resource-section\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resource-section\",\n        children: [/*#__PURE__*/_jsxDEV(HW_set, {\n          project_id: \"1\",\n          hwset_num: \"1\",\n          cap: \"165\",\n          HW_req: HW1req,\n          setHW_req: setHW1req,\n          setCheckIn_: setCheckIn1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HW_set, {\n          project_id: \"1\",\n          hwset_num: \"2\",\n          cap: \"150\",\n          HW_req: HW2req,\n          setHW_req: setHW2req,\n          setCheckIn_: setCheckIn2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), isCapacityRevealed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"HW1 Initial Capacity: \", HW1cap]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"HW2 Initial Capacity: \", HW2cap]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s2(Projects, \"di2CVP/mo064fXvGohg2J4l2NYo=\", false, function () {\n  return [useNavigate];\n});\n_c4 = Projects;\nexport default Projects;\n\n///SEPARATION\n\n// import React, { useState, useEffect } from 'react';\n//\n// // Component for displaying hardware information\n// function HW(props) {\n//     return (\n//         <h2>HWSet{props.hwset_num}:{props.availability}/{props.cap}</h2>\n//     )\n// }\n//\n// // Component for handling hardware check in/out\n// function HW_set({ project_id, hwset_num, cap, availability, setavailability }) {\n//     const [HW_req, setHW_req] = useState(\"\");\n//\n//     // Function to handle hardware check in/out\n//     const handleCheckInOut = async (checkIn) => {\n//         try {\n//             const response = await fetch(checkIn ? '/check_in_hardware' : '/check_out_hardware', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                     projectId: project_id,\n//                     qty: HW_req,\n//                     hwID: hwset_num\n//                 }),\n//             })\n//             const responseData = await response.json();\n//             setavailability(responseData.new_avail);\n//             alert(JSON.stringify(responseData));\n//         } catch (error) {\n//             console.error('Error:', error);\n//         }\n//     }\n//\n//     return (\n//         <div className='resource-container'>\n//             <form className=\"resource-section\">\n//                 <h2>HWSet{hwset_num}:{availability}/{cap}</h2>\n//             </form>\n//             <form className=\"resource-section\">\n//                 <input value={HW_req} onChange={(e) => setHW_req(e.target.value)} type=\"text\" id={HW_req} name={HW_req} placeholder=\"Enter Qty\" />\n//             </form>\n//             <form className=\"resource-section\">\n//                 <div className=\"button-container\">\n//                     <button onClick={() => handleCheckInOut(true)}>Check In</button>\n//                 </div>\n//             </form>\n//             <form className=\"resource-section\">\n//                 <div className=\"button-container\">\n//                     <button onClick={() => handleCheckInOut(false)}>Check Out</button>\n//                 </div>\n//             </form>\n//         </div>\n//     )\n// }\n//\n// // Main component\n// function Projects() {\n//     const [HW1availability, setHW1availability] = useState(); // Initial availability for HW1\n//     const [HW2availability, setHW2availability] = useState(); // Initial availability for HW2\n//\n//     useEffect(() => {\n//         // Fetch initial availability data\n//         async function getResponse() {\n//             try {\n//                 const response = await fetch('/resource_management', { // Change it later\n//                     method: 'GET',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                 })\n//                 const responseData = await response.json();\n//                 console.log(responseData);\n//                 setHW1availability(responseData.HW1availability);\n//                 setHW2availability(responseData.HW2availability);\n//             } catch (error) {\n//                 console.error('Error:', error);\n//             }\n//         }\n//         getResponse();\n//     }, []);\n//\n//     return (\n//         <div className=\"auth-form-container\">\n//             <h1>ECE461L: Resource Management</h1>\n//             <div className='resource-container'>\n//                 <form className=\"resource-section\">\n//                     <h2>Project Name 1</h2>\n//                 </form>\n//                 <div className=\"resource-section\">\n//                     <HW_set project_id=\"1\" hwset_num=\"1\" cap=\"165\" availability={HW1availability} setavailability={setHW1availability} />\n//                     <HW_set project_id=\"1\" hwset_num=\"2\" cap=\"150\" availability={HW2availability} setavailability={setHW2availability} />\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default Projects;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HW\");\n$RefreshReg$(_c2, \"HW_set\");\n$RefreshReg$(_c3, \"ButtonCheckIn_Out\");\n$RefreshReg$(_c4, \"Projects\");","map":{"version":3,"names":["React","cloneElement","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","HW","props","children","hwset_num","availabiliy","cap","fileName","_jsxFileName","lineNumber","columnNumber","_c","HW_set","project_id","HW_req","setHW_req","setCheckIn_","_s","availability","setavailability","handleCheckInOut","checkIn","response","fetch","method","headers","body","JSON","stringify","projectId","qty","hwID","responseData","json","alert","new_avail","error","console","className","value","onChange","e","target","type","id","name","placeholder","onClick","_c2","ButtonCheckIn_Out","setCheckIn","_c3","Projects","_s2","HW1cap","setHW1cap","HW2cap","setHW2cap","HW1Availability","setHW1Availability","HW1av","setHW1av","HW2av","setHW2av","HW1req","setHW1req","HW2req","setHW2req","HW3req","setHW3req","checkIn1","setCheckIn1","checkIn2","setCheckIn2","checkIn3","setCheckIn3","isPlaceholderVisible","setIsPlaceholderVisible","button1Text","setButton1Text","button2Text","setButton2Text","button3Text","setButton3Text","navigate","isCapacityRevealed","setIsCapacityRevealed","revealCapacity","data","HW1availability","HW2availability","handleClick1","handleLogout","handleClick2","handleClick3","style","position","top","right","width","_c4","$RefreshReg$"],"sources":["C:/Users/jhhuy/Documents/ECE 461L/final_project/src/pages/ResourceManagement.js"],"sourcesContent":["// ResourceManagement\r\nimport React, { cloneElement, useState, useEffect, useRef} from 'react';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction HW(props){\r\n    return(\r\n        <h2>HWSet{props.hwset_num}:{props.availabiliy}/{props.cap} </h2>\r\n    )\r\n}\r\n\r\nfunction HW_set({HW_set,project_id,hwset_num,cap,HW_req,setHW_req,setCheckIn_}){\r\n\r\n   const [availability, setavailability] = useState();\r\n    const handleCheckInOut = async (checkIn) => {\r\n\r\n        try{\r\n            const response = await fetch(checkIn ? '/check_in_hardware' : '/check_out_hardware',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    projectId:project_id, // Assuming projectId corresponds to hardware set number\r\n                    qty: HW_req,\r\n                    hwID: hwset_num\r\n                }),\r\n            })\r\n            const responseData = await response.json();\r\n                alert(JSON.stringify(responseData))\r\n            setavailability(responseData.new_avail)\r\n\r\n        }catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='resource-container'>\r\n            <form className=\"resource-section\">\r\n                <h2>HWSet{hwset_num}:{availability}/{cap} </h2>\r\n            </form>\r\n            <from className=\"resource-section\">\r\n                <input value = {HW_req} onChange={(e) => setHW_req(e.target.value)} type=\"text\" id={HW_req} name={HW_req} placeholder=\"Enter Qty\"/>\r\n            </from>\r\n            <from className=\"resource-section\">\r\n                <div className=\"button-container\">\r\n                    {/* <button onClick={() => setCheckIn_(true)}>Check In</button> */}\r\n                    <button onClick={() => handleCheckInOut(true)}>Check In</button>\r\n                </div>\r\n            </from>\r\n            <from className=\"resource-section\">\r\n                <div className=\"button-container\">\r\n                    {/* <button onClick={() => setCheckIn_(false)}>Check Out</button> */}\r\n                    <button onClick={() => handleCheckInOut(false)}>Check Out</button>\r\n                </div>\r\n            </from>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nfunction ButtonCheckIn_Out ({setCheckIn}){\r\n    return(\r\n        <div className=\"button-container\">\r\n            <button onClick={() => setCheckIn(true)}>Check In</button>\r\n            <button onClick={() => setCheckIn(false)}>Check Out</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst Projects = (project_id) => {\r\n    const [HW1cap, setHW1cap] = useState(\"\");\r\n    const [HW2cap, setHW2cap] = useState(\"\");\r\n\r\n    const [HW1Availability ,setHW1Availability] = useState(\"0\");\r\n\r\n\r\n    const [HW1av, setHW1av] = useState(\"\");\r\n    const [HW2av, setHW2av] = useState(\"\");\r\n\r\n    const [HW1req, setHW1req] = useState(\"\");\r\n    const [HW2req, setHW2req] = useState(\"\");\r\n    const [HW3req, setHW3req] = useState(\"\");\r\n\r\n    const [checkIn1, setCheckIn1] = useState(true);\r\n    const [checkIn2, setCheckIn2] = useState(true);\r\n    const [checkIn3, setCheckIn3] = useState(true);\r\n\r\n    const [isPlaceholderVisible, setIsPlaceholderVisible] = useState(true);\r\n\r\n    const [button1Text, setButton1Text] = useState(\"Join\");\r\n    const [button2Text, setButton2Text] = useState(\"Leave\");\r\n    const [button3Text, setButton3Text] = useState(\"Join\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [isCapacityRevealed, setIsCapacityRevealed] = useState(false); // Track whether capacity is revealed\r\n\r\n    const revealCapacity = async () => {\r\n        try {\r\n            const response = await fetch('/resource_management');\r\n            const data = await response.json();\r\n            setHW1cap(data.HW1availability);\r\n            setHW2cap(data.HW2availability);\r\n            setIsCapacityRevealed(true);\r\n        } catch (error) {\r\n            console.error('Error fetching capacity:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const handleClick1 = () => {\r\n        if (button1Text === \"Join\") {\r\n            setButton1Text(\"Leave\");\r\n        } else {\r\n            setButton1Text(\"Join\");\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Add any logout logic here if needed\r\n        navigate('/');\r\n      }\r\n\r\n    const handleClick2 = () => {\r\n        setButton2Text(button2Text === \"Join\" ? \"Leave\" : \"Join\");\r\n    };\r\n    const handleClick3 = () => {\r\n        setButton3Text(button3Text === \"Join\" ? \"Leave\" : \"Join\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h1>ECE461L: Resource Management</h1>\r\n            <button style={{position: 'absolute', top: '10px', right: '10px', width: '100px'}} onClick={handleLogout}>Logout</button>\r\n            <button onClick={revealCapacity}>Please Press Here to Reveal Initial Capacity, this is a known issue</button>\r\n            {/* Project 1 */}\r\n            <div className='resource-container'>\r\n                <form className=\"resource-section\">\r\n                    <h2>Your Project</h2>\r\n                    {/*<button onClick={handleClick1}>{button1Text}</button>*/}\r\n                </form>\r\n                <div className=\"resource-section\">\r\n                    <HW_set project_id=\"1\" hwset_num=\"1\" cap=\"165\" HW_req={HW1req} setHW_req={setHW1req}\r\n                            setCheckIn_={setCheckIn1}/>\r\n                    <HW_set project_id=\"1\" hwset_num=\"2\" cap=\"150\" HW_req={HW2req} setHW_req={setHW2req}\r\n                            setCheckIn_={setCheckIn2}/>\r\n                    {/* Conditionally render capacity */}\r\n                    {isCapacityRevealed && (\r\n                        <div>\r\n                            <p>HW1 Initial Capacity: {HW1cap}</p>\r\n                            <p>HW2 Initial Capacity: {HW2cap}</p>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n\r\n\r\n///SEPARATION\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n//\r\n// // Component for displaying hardware information\r\n// function HW(props) {\r\n//     return (\r\n//         <h2>HWSet{props.hwset_num}:{props.availability}/{props.cap}</h2>\r\n//     )\r\n// }\r\n//\r\n// // Component for handling hardware check in/out\r\n// function HW_set({ project_id, hwset_num, cap, availability, setavailability }) {\r\n//     const [HW_req, setHW_req] = useState(\"\");\r\n//\r\n//     // Function to handle hardware check in/out\r\n//     const handleCheckInOut = async (checkIn) => {\r\n//         try {\r\n//             const response = await fetch(checkIn ? '/check_in_hardware' : '/check_out_hardware', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     projectId: project_id,\r\n//                     qty: HW_req,\r\n//                     hwID: hwset_num\r\n//                 }),\r\n//             })\r\n//             const responseData = await response.json();\r\n//             setavailability(responseData.new_avail);\r\n//             alert(JSON.stringify(responseData));\r\n//         } catch (error) {\r\n//             console.error('Error:', error);\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <div className='resource-container'>\r\n//             <form className=\"resource-section\">\r\n//                 <h2>HWSet{hwset_num}:{availability}/{cap}</h2>\r\n//             </form>\r\n//             <form className=\"resource-section\">\r\n//                 <input value={HW_req} onChange={(e) => setHW_req(e.target.value)} type=\"text\" id={HW_req} name={HW_req} placeholder=\"Enter Qty\" />\r\n//             </form>\r\n//             <form className=\"resource-section\">\r\n//                 <div className=\"button-container\">\r\n//                     <button onClick={() => handleCheckInOut(true)}>Check In</button>\r\n//                 </div>\r\n//             </form>\r\n//             <form className=\"resource-section\">\r\n//                 <div className=\"button-container\">\r\n//                     <button onClick={() => handleCheckInOut(false)}>Check Out</button>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// // Main component\r\n// function Projects() {\r\n//     const [HW1availability, setHW1availability] = useState(); // Initial availability for HW1\r\n//     const [HW2availability, setHW2availability] = useState(); // Initial availability for HW2\r\n//\r\n//     useEffect(() => {\r\n//         // Fetch initial availability data\r\n//         async function getResponse() {\r\n//             try {\r\n//                 const response = await fetch('/resource_management', { // Change it later\r\n//                     method: 'GET',\r\n//                     headers: {\r\n//                         'Content-Type': 'application/json',\r\n//                     },\r\n//                 })\r\n//                 const responseData = await response.json();\r\n//                 console.log(responseData);\r\n//                 setHW1availability(responseData.HW1availability);\r\n//                 setHW2availability(responseData.HW2availability);\r\n//             } catch (error) {\r\n//                 console.error('Error:', error);\r\n//             }\r\n//         }\r\n//         getResponse();\r\n//     }, []);\r\n//\r\n//     return (\r\n//         <div className=\"auth-form-container\">\r\n//             <h1>ECE461L: Resource Management</h1>\r\n//             <div className='resource-container'>\r\n//                 <form className=\"resource-section\">\r\n//                     <h2>Project Name 1</h2>\r\n//                 </form>\r\n//                 <div className=\"resource-section\">\r\n//                     <HW_set project_id=\"1\" hwset_num=\"1\" cap=\"165\" availability={HW1availability} setavailability={setHW1availability} />\r\n//                     <HW_set project_id=\"1\" hwset_num=\"2\" cap=\"150\" availability={HW2availability} setavailability={setHW2availability} />\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default Projects;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}