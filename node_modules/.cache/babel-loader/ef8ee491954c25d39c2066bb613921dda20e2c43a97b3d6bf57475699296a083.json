{"ast":null,"code":"import React,{useState}from'react';import{Navigate}from'react-router-dom';import{useNavigate}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Home=props=>{// const [username, setUsername] = useState(\"\");\nconst[userID,setUserID]=useState(\"\");const[password,setPassword]=useState(\"\");const[message,setMessage]=useState(\"\");const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();//   navigate('/project')\n// Prepare data to send to the backend\nconst data={userID:userID,password:password};try{// Make a POST request to your backend\nconst response=await fetch('/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});// Handle the response from the backend\nconst responseData=await response.json();console.log(responseData);// Log the response for debugging purposes\n// Optionally, you can handle the response here and update your UI accordingly\nif(responseData.userID!==\" \"&&responseData.password!==\" \"&&responseData.userID!==null&&responseData.password!==null&&response.status===200){navigate('/project');// User logged in successfully\n// Update your UI accordingly\n}else{// navigate('/newUser')\n// Login failed\n// Update your UI accordingly\nsetMessage(\"User Name or Password is invalid\");}}catch(error){console.error('Error:',error);}};const handleRegister=async e=>{e.preventDefault();// Prepare data to send to the backend\nconst data={userID:userID,password:password};navigate('/newUser');};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ECE 461L: User Management\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Sign-In\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"home-form\",onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userID\",children:\"userID\"}),/*#__PURE__*/_jsx(\"input\",{value:userID,onChange:e=>setUserID(e.target.value),type:\"text\",id:\"userID\",name:\"userID\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"password\"}),/*#__PURE__*/_jsx(\"input\",{value:password,onChange:e=>setPassword(e.target.value),type:\"text\",id:\"password\",name:\"password\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})]}),/*#__PURE__*/_jsx(\"div\",{children:message}),/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:handleRegister,children:\"New user? Register here\"})]});};export default Home;","map":{"version":3,"names":["React","useState","Navigate","useNavigate","jsx","_jsx","jsxs","_jsxs","Home","props","userID","setUserID","password","setPassword","message","setMessage","navigate","handleLogin","e","preventDefault","data","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","status","error","handleRegister","className","children","onSubmit","htmlFor","value","onChange","target","type","id","name","onClick"],"sources":["C:/Users/jhhuy/Documents/ECE 461L/CheckPt2Submission/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Home = (props) => {\r\n\r\n    // const [username, setUsername] = useState(\"\");\r\n    const [userID, setUserID] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n    //   navigate('/project')\r\n\r\n\r\n        // Prepare data to send to the backend\r\n        const data = {\r\n            userID: userID,\r\n            password: password\r\n        };\r\n\r\n        try {\r\n            // Make a POST request to your backend\r\n            const response = await fetch('/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n            // Handle the response from the backend\r\n            const responseData = await response.json();\r\n            console.log(responseData); // Log the response for debugging purposes\r\n\r\n            // Optionally, you can handle the response here and update your UI accordingly\r\n            if (responseData.userID !== \" \" && responseData.password !== \" \" && responseData.userID !== null && responseData.password !== null && response.status === 200) {\r\n                navigate('/project');\r\n                // User logged in successfully\r\n                // Update your UI accordingly\r\n            } else {\r\n                // navigate('/newUser')\r\n                // Login failed\r\n                // Update your UI accordingly\r\n                setMessage(\"User Name or Password is invalid\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepare data to send to the backend\r\n        const data = {\r\n            userID: userID,\r\n            password: password\r\n        };\r\n\r\n        navigate('/newUser');\r\n\r\n     }\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <h1>ECE 461L: User Management</h1>\r\n            <h2>Sign-In</h2>\r\n            <form className=\"home-form\" onSubmit={handleLogin}>\r\n                {/* <label htmlFor=\"username\">username</label> */}\r\n                {/* <input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" id=\"username\" name=\"username\" /> */}\r\n\r\n                <label htmlFor=\"userID\">userID</label>\r\n                <input value={userID} onChange={(e) => setUserID(e.target.value)} type=\"text\" id=\"userID\" name=\"userID\" />\r\n\r\n                <label htmlFor=\"password\">password</label>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"text\" id=\"password\" name=\"password\" />\r\n                \r\n                <button>Login</button>\r\n                \r\n            </form>\r\n            <div>{message}</div>\r\n            <button className=\"link-button\" onClick={handleRegister}>New user? Register here</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}